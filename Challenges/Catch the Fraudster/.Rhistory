library(swirl)
swirl()
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
View(pm1)
names(pm1) <- make.names(cnames[[1]][wcol])
names(pm1)
View(pm0)
View(pm1)
names(pm1) <- names(pm0)
x1 <-  pm1$Sample.Value
x1 <-  pm1$V5
pm1$Sample.Value <-  pm1$V5
x1 <-  pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative <- x1<0
sum(negative,na.rm = TRUE)
mean(negative,na.rm = TRUE)
View(pm1)
dates <- as.Date(pm1$V4,"%Y%m%d"
)
as.Date(pm1$V4,"%Y%m%d")
as.Date(pm1$V4, format ="%Y%m%d")
as.Date(as.character(pm1$V4), format ="%Y%m%d")
pm1$Date <- as.Date(as.character(pm1$V4), format ="%Y%m%d")
dates <- pm1$Date
str(dates)
as.Date(as.character(dates),"%Y%m%d")
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative],"month")
x
x1
hist(dates[negative],"month")
hist(dates[negative,1],"month")
hist(dates[negative],"month")
swirl()
hist(dates[negative],"month")
hist(dates)
hist(dates[negative], "month")
hist(dates[negative])
hist(dates[negative],breaks = "month")
hist(dates[negative])
class(dates)
info()
hist(dates[negative],"month")
hist(dates[negative]=!Inf,"month")
hist(dates[dates[negative]!=Inf],"month")
sum(dates=Inf)
sum(dates==Inf)
hist(dates[negative],"month")
library("Rcpp", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
remove.packages("Rcpp", lib="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("RcppArmadillo", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
remove.packages("RcppArmadillo", lib="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("TTR", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
remove.packages("TTR", lib="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("git2r", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
remove.packages("git2r", lib="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
install.packages(c("git2r", "Rcpp", "TTR"))
install.packages(c("dplyr", "git2r"))
library("git2r", lib.loc="~/Library/R/3.4/library")
detach("package:git2r", unload=TRUE)
install.packages(c("curl", "git2r"))
setwd("~/GitHub/DataScienceSpecialization/Challenges/Catch the Fraudster")
library(readr)
Fraud_Instance <- read_csv("~/GitHub/DataScienceSpecialization/Challenges/Catch the Fraudster/Fraud Instance  Raw Data.xlsx - Raw.csv")
View(Fraud_Instance)
str(Fraud_Instance)
summary(Fraud_Instance)
sapply
sapply(Fraud_Instance,class)
head(Fraud_Instance$`Age Group`)
library(tidyverse)
names(Fraud_Instance) <- make.names(names(Fraud_Instance))
Fraud_Instance <- Fraud_Instance %>% mutate(Age.Group = as.numeric(Age.Group))
sapply(Fraud_Instance,class)
head(Fraud_Instance$`Age Group`)
head(Fraud_Instance$Age.Group)
Fraud_Instance <- Fraud_Instance %>% mutate(Age.Group = as.double(Age.Group))
head(Fraud_Instance$Age.Group)
class(Fraud_Instance$Age.Group)
sapply(Fraud_Instance,class)
Fraud_Instance <- Fraud_Instance %>% mutate(Height..cms. = as.double(Height..cms.)) %>% mutate_if(is.character,as.factor)
sapply(Fraud_Instance,class)
Fraud_Instance <- Fraud_Instance %>% mutate(Owns.a.Vehicle = as.factor(Owns.a.Vehicle))
sapply(Fraud_Instance,class)
sum(complete.cases(Fraud_Instance))
dim(Fraud_Instance)
install.packages("rattle", lib="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library(rattle)
install.packages(c("JGR","Deducer","DeducerExtras"))
library(Deducer)
install.packages("Rcmdr", lib="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library(Rcmdr)
model <- glm(Fraud.Instance ~ .,family = binomial(link = "logit"),data = Fraud_Instance)
model
names(model)
summary(model)
class(Fraud_Instance$Claim.Amount)
str(Fraud_Instance$Claim.Amount)
sub("$","",Fraud_Instance$Claim.Amount[1:4])
gsub("$","",Fraud_Instance$Claim.Amount[1:4])
gsub("$","","$290")
gsub("2","","$290")
gsub("/$","","$290")
gsub("$","","$290")
sub("$","","$290")
sub(".$","","$290")
sub("$.","","$290")
sub("*$","","$290")
separate("$209",sep = "$")
separate(Fraud_Instance$Claim.Amount[1:4],sep = "$")
as.numeric("$290")
replace("$","",Fraud_Instance$Claim.Amount[1:4])
replace("$",Fraud_Instance$Claim.Amount[1:4])
sapply(Fraud_Instance,class)
gsub([:punct:],"",Fraud_Instance$Claim.Amount[1:4])
sub([:punct:],"",Fraud_Instance$Claim.Amount[1:4])
gsub(/$,"",Fraud_Instance$Claim.Amount[1:4])
gsub("/$","",Fraud_Instance$Claim.Amount[1:4])
gsub("\$","",Fraud_Instance$Claim.Amount[1:4])
gsub(".$","",Fraud_Instance$Claim.Amount[1:4])
gsub("*.","",Fraud_Instance$Claim.Amount[1:4])
gsub("*","",Fraud_Instance$Claim.Amount[1:4])
gsub("[:punct:]	","",Fraud_Instance$Claim.Amount[1:4])
gsub("[:punct:]","",Fraud_Instance$Claim.Amount[1:4])
gsub("[:punct:]*","",Fraud_Instance$Claim.Amount[1:4])
gsub("[[:punct:]]","",Fraud_Instance$Claim.Amount[1:4])
Fraud_Instance$Claim.Amount <- gsub("[[:punct:]]","",Fraud_Instance$Claim.Amount)
Fraud_Instance$Claim.Amount <- as.numeric(Fraud_Instance$Claim.Amount)
model <- glm(Fraud.Instance ~.,family = binomial(link = "logit"),data = select(Fraud_Instance,-X.))
summary(model)
model$converged
model$residuals
model
anova(model,test = "Chisq")
