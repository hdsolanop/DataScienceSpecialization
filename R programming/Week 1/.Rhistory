install.packages(c("cluster", "Matrix", "nlme", "survival"))
install.packages("swirl")
demo()
swirl()
swirl
swirl::swirl()
swirl()
swirl()
swirl
swirl::play()
swirl()
swirl
swirl::swirl()
data("cars")
data(cars)
help(cars)
head()
head(cars)
plot(cars)
help("plot")
help(plot)
View(cars)
plot(cars$speed , cars$dist)
install.packages(c("crayon", "curl", "digest", "httr", "jsonlite", "Matrix", "mgcv", "mime", "nlme", "openssl", "R6", "stringi", "stringr", "survival", "swirl"))
q()
install.packages(c("Matrix", "R6", "cluster", "codetools", "curl", "foreign", "jsonlite", "lattice", "mgcv", "openssl", "stringi", "survival", "yaml"))
plot(0:30, dpois(0:30,5), type=’h’, lwd=2)
par(mfrow=c(1,3))
plot(0:30, dpois(0:30,5), type=’h’, lwd=2)
plot(0:30, dpois(0:30,5), lwd=2)
plot(0:30, dpois(0:30,5))
plot(0:30, dpois(0:30,1.3))
ploT?
m -> dpois(1:30,1.3,log = FALSE)
dpois(1:30,1.3,log = FALSE)
dpois(2,1.3,log=FALSE)
dnorm(85,100,12)
dnorm(85,100,12)*100
dnorm(85,100,12)*100
dnorm(85,100,12,lower.tail = FALSE)*100
dnorm(85,100,12,TRUE)*100
dnorm(85,100,12,FALSE)*100
dnorm(85,100,12,FALSE)
pnorm(85,100,12,FALSE)
pnorm(85,100,12)
1 - pnorm(0.75,100,12)
1-pnorm(5,4.6,1.1)
1-pnorm(5,4.6,1.1,FALSE)
pnorm(5,4.6,1.1,FALSE)
pnorm(5,4.6,1.1,TRUE)
pnorm(5,4.6,1.1)
1-pnorm(500,480,20)
pnorm(560,480,20)
pnorm(560,480,20)
pnorm(560,480,20,FALSE)
pnorm(560,480,20)
pnorm(460,480,20)+pnorm(520,480,20,FALSE)
x -> (1221,1509
1487
1321
1696
907
1098
1215
1802
1345
1301
987)
x -> (12211509
1487
1321
1696
907
1098
1215
1802
1345
1301
987)
1221
1509
1487
1321
1696
907
1098
1215
1802
1345
1301
987
x <- (1221
1509
1487
1321
1696
907
1098
1215
1802
1345
1301
987)
x
pnorm(1.65)
qnorm(0.9)
qnorm(1)
qnorm(0.8)
qnorm(0.95)
qt(0.1,99)
qt(0.1,9)
qt(0.9,9)
qt(0.1,9)
qt(0.9,9)
qt(0.95,9)
qt(0.975,8)
qt(0.975,7)
qt(0.975,28)
qnorm(0.05)
pnorm(2)
1 - pnorm(2)
pnorm(-2)
qt(0.05,7)
qt(0.05,7,lower.tail = FALSE)
qt(0.05,7)
qt(0.1,24)
qt(0.05,7,lower.tail = FALSE)
pt(1.32,7)
pt(1.32,7,lower.tail = FALSE)
pt(1.32,7)
1-pt(1.3233,7)
1-pt(0.17,7)
1-pt(0.1787,7)
1-pt(1.4286,7)
1-pt(2.25,7)
1-pt(2.2586,7)
1-pt(2.2586,27)
qt(0.025,27)+qt(0.025,27,lower.tail = FALSE)
qt(0.025,27)
qt(0.025,27,lower.tail = FALSE)
qt((1+0.95)/2,27)
1-pt(1.4068,27)
qt(0.025,17,lower.tail = FALSE)
1-pt(1.4068,17)
pt(1.4068,17,lower.tail = FALSE)
pt(1.4068,17,lower.tail = FALSE)*é
pt(1.4068,17,lower.tail = FALSE)*2
pt(1.4068,17,lower.tail = FALSE)+pt(1.4068,17)
pt(1.4068,17,lower.tail = FALSE)+pt(-1.4068,17)
x <- (40,22,24,14)
x <- c(40,22,24,14)
y <- c(25,25,25,25)
chisq.test(x,y)
chisq.test(x,y)
chisq.test(x)
chisq.test(x,y=y)
chisq.test(x,y,TRUE)
chisq.test(x)
chisq.test(x)$p-value
chisq.test(x,p=y,rescale.p = TRUE)
chisq.test(x,p=y,rescale.p = TRUE)$p.value
chisq.test(x,p=y,rescale.p = TRUE)
install.packages(c("jsonlite", "openssl"))
install.packages("digest")
source("http://bioconductor.org/biocLite.R")
biocLite()
find.package("devtools")
install.packages("devtools")
install.packages("KernSmooth")
find.packages("KernSmooth")
find.package("KernSmooth")
library("KernSmooth")
install.packages(c("mgcv", "survival"))
install.packages(c("Matrix", "nlme"))
install.packages("Matrix")
install.packages("Matrix")
install.packages("Matrix")
install.packages("Matrix")
getwd()
install.packages("nlme")
R CMD INSTALL
swirl()
install.packages("swirl")
install.packages("nlme")
swirl()
install.packages("swirl")
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
siwrl()
swirlt()
swirl()
install.packages("nlme")
library("nlme", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
detach("package:nlme", unload=TRUE)
source("https://bioconductor.org/biocLite.R")
biocLite()
source("https://bioconductor.org/biocLite.R")
biocLite()
install.packages("nlme")
source("https://bioconductor.org/biocLite.R")
biocLite()
update.packages()
library(nlme)
source("https://bioconductor.org/biocLite.R")
biocLite()
library(nlme)
install.packages("nlme",repos="http://cran.r-project.org")
install.packages("nlme", repos = "http://cran.r-project.org")
source("https://bioconductor.org/biocLite.R")
biocLite()
install.packages("digest")
install.packages("digest")
demo()
demo(package = .packages(all.available = TRUE))
demo(tkcanvas)
demo(package = tkcanvas)
tkcanvas
tkcanvas()
library(tcltk)
demo(package = tkcanvas)
demo(tkcanvas)
require(tcltk) || stop("tcl/tk library not available")
[1] TRUE
> require(graphics); require(stats)
> local({
+     have_ttk <- as.character(tcl("info", "tclversion")) >= "8.5"
+     if(have_ttk) {
+         tkbutton <- ttkbutton
+         tkframe <- ttkframe
+         tklabel <- ttklabel
+     }
+     tclServiceMode(FALSE) # don't display until complete
+     top <- tktoplevel()
+     tktitle(top) <- "Plot Demonstration"
x <- 1
print(x)
x
msg <- "hello"
msg
print(msg)
## comment on this
f
x <- rnorm(20
°
)
x <- rnorm(20)
print(x)
mean(x)
x
x ## auto-printing occurs
msg <- "Oh MyG"
jajajaj
y <- 1:40
Y
y
x + y
integer(x)
?vector
integer(1)
integer(1L)
integer(1.0)
integer()
integer(NA)
O/O
0/0
attributes(x)
attributes(matrix())
attributes(length)
attributes(vector())
c()
x <- c(0.5 , 0.6)
X
x
c(T,F)
X <- vector("numeric", length = 10)
X
class(x)
class(X)
class(msg)
as.numeric(msg)
as.logical(x)
as.logical(X)
as.character(x)
as.character(X)
as.complex(x)
x <- list(1, "a",TRUE,1 + 4i)
x
x[[1]]
x[[4]]
as.complex(x)
x
class(x)
attibutes(list())
attributes(list())
m <- matrix(2,3)
attributes(m)
m
m <- matrix(2,3)
m <- matrix(nrow = 2, ncoll =3)
m <- matrix(nrow = 2, ncol =3)
m
m <- matrix(1:6, 2,3)
m
attributes(m)
m[1,3]
y <- 1:10
dim(y) <- c(2,5)
y
mean(x)
?lm
u <- factor(c("yes","yes","yes","no"))
u
table(u)
class(u)
unclass(u)
u
table(unclass(u))
table(u)
u <- factor(c("yes","yes","yes","no"),levels = c("yes","no"))
u
is.na(x)
is.nan(x )
is.nan(x)
is.nan(u)
contributors()
x <- data.frame(foo = 1:4,bar = c(T,T,F,F))
X
x
nrow(x)
ncol(x)
attributes(x)
y <- 1:3
names(x)
names(y)
names(y) <- c("foo", "bar", "norf")
y
names(y)
y$foo
class(y)
class(xx)
class(x)
data.frame
x
x[[1,2]]
x[[0,1]]
x[[1,5]]
x[[1,4]]
x[[1]]
x[["foo"]]
x[["bar"]]
setwd("~/GitHub/DataScienceSpecialization")
class(4L)
x <- c(4, "a",TRUE)
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
cbind(x, y)
x <- list(2, "a", "b", TRUE)
x[[1]]
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x > 10] <- 4
x
setwd("~/GitHub/DataScienceSpecialization/Week 1")
read.csv(hw1_data.csv)
read.csv(file= hw1_data.csv)
library(readr)
hw1_data <- read_csv("~/GitHub/DataScienceSpecialization/Week 1/hw1_data.csv")
View(hw1_data)
read.csv()
hw1_data
hw1_data[1:3]
hw1_data[,1:""]
hw1_data[,1:3]
hw1_data[[,1:3]]
hw1_data[1:6,1:3]
hw1_data[1:3]
hw1_data[1:3,1:2]
hw1_data[1:3,1:6]
nrow(hw1_data)
hw1_data[150:153,1:6]
hw1_data[[Ozone]]
x <- data.frame(hw1_data)
x$Ozone
x$Ozone[47]
complete.cases(x$Ozone)
sum(complete.cases(x$Ozone))
153-116
x*Ozone[complete.cases(x$Ozone))]
x*Ozone[complete.cases(x$Ozone)]
x$Ozone[complete.cases(x$Ozone)]
mean[x$Ozone[complete.cases(x$Ozone)]]
mean(x$Ozone[complete.cases(x$Ozone)])
oz <- x$Ozone[x>31]
oz <- x$Ozone[complete.cases(x>31)]
oz <- complete.cases(x$Ozone[x>31])
oz
x
View(hw1_data)
